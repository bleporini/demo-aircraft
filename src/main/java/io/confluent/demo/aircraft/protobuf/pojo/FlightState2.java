// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: flight_state_2.proto

package io.confluent.demo.aircraft.protobuf.pojo;

public final class FlightState2 {
  private FlightState2() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface FlightStateOrBuilder extends
      // @@protoc_insertion_point(interface_extends:io.confluent.demo.flights.protobuf.pojo.FlightState)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Unique ICAO 24-bit address of the transponder in hex string representation.
     * </pre>
     *
     * <code>string icao24 = 1;</code>
     * @return The icao24.
     */
    java.lang.String getIcao24();
    /**
     * <pre>
     * Unique ICAO 24-bit address of the transponder in hex string representation.
     * </pre>
     *
     * <code>string icao24 = 1;</code>
     * @return The bytes for icao24.
     */
    com.google.protobuf.ByteString
        getIcao24Bytes();

    /**
     * <pre>
     * RENAME
     * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
     * </pre>
     *
     * <code>string flight_number = 2;</code>
     * @return The flightNumber.
     */
    java.lang.String getFlightNumber();
    /**
     * <pre>
     * RENAME
     * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
     * </pre>
     *
     * <code>string flight_number = 2;</code>
     * @return The bytes for flightNumber.
     */
    com.google.protobuf.ByteString
        getFlightNumberBytes();

    /**
     * <pre>
     * Country name inferred from the ICAO 24-bit address.
     * </pre>
     *
     * <code>string origin_country = 3;</code>
     * @return The originCountry.
     */
    java.lang.String getOriginCountry();
    /**
     * <pre>
     * Country name inferred from the ICAO 24-bit address.
     * </pre>
     *
     * <code>string origin_country = 3;</code>
     * @return The bytes for originCountry.
     */
    com.google.protobuf.ByteString
        getOriginCountryBytes();

    /**
     * <pre>
     * Unix timestamp (seconds) for the last position update. Can be null if no position report was received by OpenSky within the past 15s.
     * </pre>
     *
     * <code>double time_position = 4;</code>
     * @return The timePosition.
     */
    double getTimePosition();

    /**
     * <pre>
     * Unix timestamp (seconds) for the last update in general. This field is updated for any new, valid message received from the transponder.
     * </pre>
     *
     * <code>int32 last_contact = 5;</code>
     * @return The lastContact.
     */
    int getLastContact();

    /**
     * <pre>
     * WGS-84 longitude in decimal degrees. Can be null.
     * </pre>
     *
     * <code>double longitude = 6;</code>
     * @return The longitude.
     */
    double getLongitude();

    /**
     * <pre>
     * WGS-84 latitude in decimal degrees. Can be null.
     * </pre>
     *
     * <code>double latitude = 7;</code>
     * @return The latitude.
     */
    double getLatitude();

    /**
     * <pre>
     * Barometric altitude in meters. Can be null.
     * </pre>
     *
     * <code>double baro_altitude = 8;</code>
     * @return The baroAltitude.
     */
    double getBaroAltitude();

    /**
     * <pre>
     * Velocity over ground in m/s. Can be null.
     * </pre>
     *
     * <code>double velocity = 9;</code>
     * @return The velocity.
     */
    double getVelocity();

    /**
     * <pre>
     * True track in decimal degrees clockwise from north (north=0Â°). Can be null.
     * </pre>
     *
     * <code>double true_track = 10;</code>
     * @return The trueTrack.
     */
    double getTrueTrack();

    /**
     * <pre>
     * Vertical rate in m/s. A positive value indicates that the airplane is climbing, a negative value indicates that it descends. Can be null.
     * </pre>
     *
     * <code>double vertical_rate = 11;</code>
     * @return The verticalRate.
     */
    double getVerticalRate();

    /**
     * <pre>
     * Geometric altitude in meters. Can be null.
     * </pre>
     *
     * <code>double geo_altitude = 12;</code>
     * @return The geoAltitude.
     */
    double getGeoAltitude();

    /**
     * <pre>
     * The transponder code aka Squawk. Can be null.
     * </pre>
     *
     * <code>string squawk = 13;</code>
     * @return The squawk.
     */
    java.lang.String getSquawk();
    /**
     * <pre>
     * The transponder code aka Squawk. Can be null.
     * </pre>
     *
     * <code>string squawk = 13;</code>
     * @return The bytes for squawk.
     */
    com.google.protobuf.ByteString
        getSquawkBytes();

    /**
     * <pre>
     * Whether flight status indicates special purpose indicator.
     * </pre>
     *
     * <code>bool spi = 14;</code>
     * @return The spi.
     */
    boolean getSpi();

    /**
     * <pre>
     * ADD
     * New field with tag number 15 for version 2
     * </pre>
     *
     * <code>bool on_ground = 15;</code>
     * @return The onGround.
     */
    boolean getOnGround();
  }
  /**
   * Protobuf type {@code io.confluent.demo.flights.protobuf.pojo.FlightState}
   */
  public  static final class FlightState extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:io.confluent.demo.flights.protobuf.pojo.FlightState)
      FlightStateOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use FlightState.newBuilder() to construct.
    private FlightState(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FlightState() {
      icao24_ = "";
      flightNumber_ = "";
      originCountry_ = "";
      squawk_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FlightState();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FlightState(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              icao24_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              flightNumber_ = s;
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              originCountry_ = s;
              break;
            }
            case 33: {

              timePosition_ = input.readDouble();
              break;
            }
            case 40: {

              lastContact_ = input.readInt32();
              break;
            }
            case 49: {

              longitude_ = input.readDouble();
              break;
            }
            case 57: {

              latitude_ = input.readDouble();
              break;
            }
            case 65: {

              baroAltitude_ = input.readDouble();
              break;
            }
            case 73: {

              velocity_ = input.readDouble();
              break;
            }
            case 81: {

              trueTrack_ = input.readDouble();
              break;
            }
            case 89: {

              verticalRate_ = input.readDouble();
              break;
            }
            case 97: {

              geoAltitude_ = input.readDouble();
              break;
            }
            case 106: {
              java.lang.String s = input.readStringRequireUtf8();

              squawk_ = s;
              break;
            }
            case 112: {

              spi_ = input.readBool();
              break;
            }
            case 120: {

              onGround_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.class, io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.Builder.class);
    }

    public static final int ICAO24_FIELD_NUMBER = 1;
    private volatile java.lang.Object icao24_;
    /**
     * <pre>
     * Unique ICAO 24-bit address of the transponder in hex string representation.
     * </pre>
     *
     * <code>string icao24 = 1;</code>
     * @return The icao24.
     */
    public java.lang.String getIcao24() {
      java.lang.Object ref = icao24_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        icao24_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Unique ICAO 24-bit address of the transponder in hex string representation.
     * </pre>
     *
     * <code>string icao24 = 1;</code>
     * @return The bytes for icao24.
     */
    public com.google.protobuf.ByteString
        getIcao24Bytes() {
      java.lang.Object ref = icao24_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icao24_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FLIGHT_NUMBER_FIELD_NUMBER = 2;
    private volatile java.lang.Object flightNumber_;
    /**
     * <pre>
     * RENAME
     * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
     * </pre>
     *
     * <code>string flight_number = 2;</code>
     * @return The flightNumber.
     */
    public java.lang.String getFlightNumber() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        flightNumber_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * RENAME
     * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
     * </pre>
     *
     * <code>string flight_number = 2;</code>
     * @return The bytes for flightNumber.
     */
    public com.google.protobuf.ByteString
        getFlightNumberBytes() {
      java.lang.Object ref = flightNumber_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        flightNumber_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGIN_COUNTRY_FIELD_NUMBER = 3;
    private volatile java.lang.Object originCountry_;
    /**
     * <pre>
     * Country name inferred from the ICAO 24-bit address.
     * </pre>
     *
     * <code>string origin_country = 3;</code>
     * @return The originCountry.
     */
    public java.lang.String getOriginCountry() {
      java.lang.Object ref = originCountry_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        originCountry_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Country name inferred from the ICAO 24-bit address.
     * </pre>
     *
     * <code>string origin_country = 3;</code>
     * @return The bytes for originCountry.
     */
    public com.google.protobuf.ByteString
        getOriginCountryBytes() {
      java.lang.Object ref = originCountry_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originCountry_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIME_POSITION_FIELD_NUMBER = 4;
    private double timePosition_;
    /**
     * <pre>
     * Unix timestamp (seconds) for the last position update. Can be null if no position report was received by OpenSky within the past 15s.
     * </pre>
     *
     * <code>double time_position = 4;</code>
     * @return The timePosition.
     */
    public double getTimePosition() {
      return timePosition_;
    }

    public static final int LAST_CONTACT_FIELD_NUMBER = 5;
    private int lastContact_;
    /**
     * <pre>
     * Unix timestamp (seconds) for the last update in general. This field is updated for any new, valid message received from the transponder.
     * </pre>
     *
     * <code>int32 last_contact = 5;</code>
     * @return The lastContact.
     */
    public int getLastContact() {
      return lastContact_;
    }

    public static final int LONGITUDE_FIELD_NUMBER = 6;
    private double longitude_;
    /**
     * <pre>
     * WGS-84 longitude in decimal degrees. Can be null.
     * </pre>
     *
     * <code>double longitude = 6;</code>
     * @return The longitude.
     */
    public double getLongitude() {
      return longitude_;
    }

    public static final int LATITUDE_FIELD_NUMBER = 7;
    private double latitude_;
    /**
     * <pre>
     * WGS-84 latitude in decimal degrees. Can be null.
     * </pre>
     *
     * <code>double latitude = 7;</code>
     * @return The latitude.
     */
    public double getLatitude() {
      return latitude_;
    }

    public static final int BARO_ALTITUDE_FIELD_NUMBER = 8;
    private double baroAltitude_;
    /**
     * <pre>
     * Barometric altitude in meters. Can be null.
     * </pre>
     *
     * <code>double baro_altitude = 8;</code>
     * @return The baroAltitude.
     */
    public double getBaroAltitude() {
      return baroAltitude_;
    }

    public static final int VELOCITY_FIELD_NUMBER = 9;
    private double velocity_;
    /**
     * <pre>
     * Velocity over ground in m/s. Can be null.
     * </pre>
     *
     * <code>double velocity = 9;</code>
     * @return The velocity.
     */
    public double getVelocity() {
      return velocity_;
    }

    public static final int TRUE_TRACK_FIELD_NUMBER = 10;
    private double trueTrack_;
    /**
     * <pre>
     * True track in decimal degrees clockwise from north (north=0Â°). Can be null.
     * </pre>
     *
     * <code>double true_track = 10;</code>
     * @return The trueTrack.
     */
    public double getTrueTrack() {
      return trueTrack_;
    }

    public static final int VERTICAL_RATE_FIELD_NUMBER = 11;
    private double verticalRate_;
    /**
     * <pre>
     * Vertical rate in m/s. A positive value indicates that the airplane is climbing, a negative value indicates that it descends. Can be null.
     * </pre>
     *
     * <code>double vertical_rate = 11;</code>
     * @return The verticalRate.
     */
    public double getVerticalRate() {
      return verticalRate_;
    }

    public static final int GEO_ALTITUDE_FIELD_NUMBER = 12;
    private double geoAltitude_;
    /**
     * <pre>
     * Geometric altitude in meters. Can be null.
     * </pre>
     *
     * <code>double geo_altitude = 12;</code>
     * @return The geoAltitude.
     */
    public double getGeoAltitude() {
      return geoAltitude_;
    }

    public static final int SQUAWK_FIELD_NUMBER = 13;
    private volatile java.lang.Object squawk_;
    /**
     * <pre>
     * The transponder code aka Squawk. Can be null.
     * </pre>
     *
     * <code>string squawk = 13;</code>
     * @return The squawk.
     */
    public java.lang.String getSquawk() {
      java.lang.Object ref = squawk_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        squawk_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * The transponder code aka Squawk. Can be null.
     * </pre>
     *
     * <code>string squawk = 13;</code>
     * @return The bytes for squawk.
     */
    public com.google.protobuf.ByteString
        getSquawkBytes() {
      java.lang.Object ref = squawk_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        squawk_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SPI_FIELD_NUMBER = 14;
    private boolean spi_;
    /**
     * <pre>
     * Whether flight status indicates special purpose indicator.
     * </pre>
     *
     * <code>bool spi = 14;</code>
     * @return The spi.
     */
    public boolean getSpi() {
      return spi_;
    }

    public static final int ON_GROUND_FIELD_NUMBER = 15;
    private boolean onGround_;
    /**
     * <pre>
     * ADD
     * New field with tag number 15 for version 2
     * </pre>
     *
     * <code>bool on_ground = 15;</code>
     * @return The onGround.
     */
    public boolean getOnGround() {
      return onGround_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getIcao24Bytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, icao24_);
      }
      if (!getFlightNumberBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, flightNumber_);
      }
      if (!getOriginCountryBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, originCountry_);
      }
      if (timePosition_ != 0D) {
        output.writeDouble(4, timePosition_);
      }
      if (lastContact_ != 0) {
        output.writeInt32(5, lastContact_);
      }
      if (longitude_ != 0D) {
        output.writeDouble(6, longitude_);
      }
      if (latitude_ != 0D) {
        output.writeDouble(7, latitude_);
      }
      if (baroAltitude_ != 0D) {
        output.writeDouble(8, baroAltitude_);
      }
      if (velocity_ != 0D) {
        output.writeDouble(9, velocity_);
      }
      if (trueTrack_ != 0D) {
        output.writeDouble(10, trueTrack_);
      }
      if (verticalRate_ != 0D) {
        output.writeDouble(11, verticalRate_);
      }
      if (geoAltitude_ != 0D) {
        output.writeDouble(12, geoAltitude_);
      }
      if (!getSquawkBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 13, squawk_);
      }
      if (spi_ != false) {
        output.writeBool(14, spi_);
      }
      if (onGround_ != false) {
        output.writeBool(15, onGround_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getIcao24Bytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, icao24_);
      }
      if (!getFlightNumberBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, flightNumber_);
      }
      if (!getOriginCountryBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, originCountry_);
      }
      if (timePosition_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, timePosition_);
      }
      if (lastContact_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, lastContact_);
      }
      if (longitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(6, longitude_);
      }
      if (latitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(7, latitude_);
      }
      if (baroAltitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(8, baroAltitude_);
      }
      if (velocity_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(9, velocity_);
      }
      if (trueTrack_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(10, trueTrack_);
      }
      if (verticalRate_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(11, verticalRate_);
      }
      if (geoAltitude_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(12, geoAltitude_);
      }
      if (!getSquawkBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, squawk_);
      }
      if (spi_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(14, spi_);
      }
      if (onGround_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, onGround_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState)) {
        return super.equals(obj);
      }
      io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState other = (io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState) obj;

      if (!getIcao24()
          .equals(other.getIcao24())) return false;
      if (!getFlightNumber()
          .equals(other.getFlightNumber())) return false;
      if (!getOriginCountry()
          .equals(other.getOriginCountry())) return false;
      if (java.lang.Double.doubleToLongBits(getTimePosition())
          != java.lang.Double.doubleToLongBits(
              other.getTimePosition())) return false;
      if (getLastContact()
          != other.getLastContact()) return false;
      if (java.lang.Double.doubleToLongBits(getLongitude())
          != java.lang.Double.doubleToLongBits(
              other.getLongitude())) return false;
      if (java.lang.Double.doubleToLongBits(getLatitude())
          != java.lang.Double.doubleToLongBits(
              other.getLatitude())) return false;
      if (java.lang.Double.doubleToLongBits(getBaroAltitude())
          != java.lang.Double.doubleToLongBits(
              other.getBaroAltitude())) return false;
      if (java.lang.Double.doubleToLongBits(getVelocity())
          != java.lang.Double.doubleToLongBits(
              other.getVelocity())) return false;
      if (java.lang.Double.doubleToLongBits(getTrueTrack())
          != java.lang.Double.doubleToLongBits(
              other.getTrueTrack())) return false;
      if (java.lang.Double.doubleToLongBits(getVerticalRate())
          != java.lang.Double.doubleToLongBits(
              other.getVerticalRate())) return false;
      if (java.lang.Double.doubleToLongBits(getGeoAltitude())
          != java.lang.Double.doubleToLongBits(
              other.getGeoAltitude())) return false;
      if (!getSquawk()
          .equals(other.getSquawk())) return false;
      if (getSpi()
          != other.getSpi()) return false;
      if (getOnGround()
          != other.getOnGround()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ICAO24_FIELD_NUMBER;
      hash = (53 * hash) + getIcao24().hashCode();
      hash = (37 * hash) + FLIGHT_NUMBER_FIELD_NUMBER;
      hash = (53 * hash) + getFlightNumber().hashCode();
      hash = (37 * hash) + ORIGIN_COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + getOriginCountry().hashCode();
      hash = (37 * hash) + TIME_POSITION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTimePosition()));
      hash = (37 * hash) + LAST_CONTACT_FIELD_NUMBER;
      hash = (53 * hash) + getLastContact();
      hash = (37 * hash) + LONGITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLongitude()));
      hash = (37 * hash) + LATITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getLatitude()));
      hash = (37 * hash) + BARO_ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getBaroAltitude()));
      hash = (37 * hash) + VELOCITY_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVelocity()));
      hash = (37 * hash) + TRUE_TRACK_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getTrueTrack()));
      hash = (37 * hash) + VERTICAL_RATE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getVerticalRate()));
      hash = (37 * hash) + GEO_ALTITUDE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          java.lang.Double.doubleToLongBits(getGeoAltitude()));
      hash = (37 * hash) + SQUAWK_FIELD_NUMBER;
      hash = (53 * hash) + getSquawk().hashCode();
      hash = (37 * hash) + SPI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSpi());
      hash = (37 * hash) + ON_GROUND_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getOnGround());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code io.confluent.demo.flights.protobuf.pojo.FlightState}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:io.confluent.demo.flights.protobuf.pojo.FlightState)
        io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightStateOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.class, io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.Builder.class);
      }

      // Construct using io.confluent.demo.flights.protobuf.pojo.FlightState2.FlightState.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        icao24_ = "";

        flightNumber_ = "";

        originCountry_ = "";

        timePosition_ = 0D;

        lastContact_ = 0;

        longitude_ = 0D;

        latitude_ = 0D;

        baroAltitude_ = 0D;

        velocity_ = 0D;

        trueTrack_ = 0D;

        verticalRate_ = 0D;

        geoAltitude_ = 0D;

        squawk_ = "";

        spi_ = false;

        onGround_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor;
      }

      @java.lang.Override
      public io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState getDefaultInstanceForType() {
        return io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.getDefaultInstance();
      }

      @java.lang.Override
      public io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState build() {
        io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState buildPartial() {
        io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState result = new io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState(this);
        result.icao24_ = icao24_;
        result.flightNumber_ = flightNumber_;
        result.originCountry_ = originCountry_;
        result.timePosition_ = timePosition_;
        result.lastContact_ = lastContact_;
        result.longitude_ = longitude_;
        result.latitude_ = latitude_;
        result.baroAltitude_ = baroAltitude_;
        result.velocity_ = velocity_;
        result.trueTrack_ = trueTrack_;
        result.verticalRate_ = verticalRate_;
        result.geoAltitude_ = geoAltitude_;
        result.squawk_ = squawk_;
        result.spi_ = spi_;
        result.onGround_ = onGround_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState) {
          return mergeFrom((io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState other) {
        if (other == io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState.getDefaultInstance()) return this;
        if (!other.getIcao24().isEmpty()) {
          icao24_ = other.icao24_;
          onChanged();
        }
        if (!other.getFlightNumber().isEmpty()) {
          flightNumber_ = other.flightNumber_;
          onChanged();
        }
        if (!other.getOriginCountry().isEmpty()) {
          originCountry_ = other.originCountry_;
          onChanged();
        }
        if (other.getTimePosition() != 0D) {
          setTimePosition(other.getTimePosition());
        }
        if (other.getLastContact() != 0) {
          setLastContact(other.getLastContact());
        }
        if (other.getLongitude() != 0D) {
          setLongitude(other.getLongitude());
        }
        if (other.getLatitude() != 0D) {
          setLatitude(other.getLatitude());
        }
        if (other.getBaroAltitude() != 0D) {
          setBaroAltitude(other.getBaroAltitude());
        }
        if (other.getVelocity() != 0D) {
          setVelocity(other.getVelocity());
        }
        if (other.getTrueTrack() != 0D) {
          setTrueTrack(other.getTrueTrack());
        }
        if (other.getVerticalRate() != 0D) {
          setVerticalRate(other.getVerticalRate());
        }
        if (other.getGeoAltitude() != 0D) {
          setGeoAltitude(other.getGeoAltitude());
        }
        if (!other.getSquawk().isEmpty()) {
          squawk_ = other.squawk_;
          onChanged();
        }
        if (other.getSpi() != false) {
          setSpi(other.getSpi());
        }
        if (other.getOnGround() != false) {
          setOnGround(other.getOnGround());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object icao24_ = "";
      /**
       * <pre>
       * Unique ICAO 24-bit address of the transponder in hex string representation.
       * </pre>
       *
       * <code>string icao24 = 1;</code>
       * @return The icao24.
       */
      public java.lang.String getIcao24() {
        java.lang.Object ref = icao24_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          icao24_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Unique ICAO 24-bit address of the transponder in hex string representation.
       * </pre>
       *
       * <code>string icao24 = 1;</code>
       * @return The bytes for icao24.
       */
      public com.google.protobuf.ByteString
          getIcao24Bytes() {
        java.lang.Object ref = icao24_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icao24_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Unique ICAO 24-bit address of the transponder in hex string representation.
       * </pre>
       *
       * <code>string icao24 = 1;</code>
       * @param value The icao24 to set.
       * @return This builder for chaining.
       */
      public Builder setIcao24(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        icao24_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ICAO 24-bit address of the transponder in hex string representation.
       * </pre>
       *
       * <code>string icao24 = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIcao24() {
        
        icao24_ = getDefaultInstance().getIcao24();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unique ICAO 24-bit address of the transponder in hex string representation.
       * </pre>
       *
       * <code>string icao24 = 1;</code>
       * @param value The bytes for icao24 to set.
       * @return This builder for chaining.
       */
      public Builder setIcao24Bytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        icao24_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object flightNumber_ = "";
      /**
       * <pre>
       * RENAME
       * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
       * </pre>
       *
       * <code>string flight_number = 2;</code>
       * @return The flightNumber.
       */
      public java.lang.String getFlightNumber() {
        java.lang.Object ref = flightNumber_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          flightNumber_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * RENAME
       * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
       * </pre>
       *
       * <code>string flight_number = 2;</code>
       * @return The bytes for flightNumber.
       */
      public com.google.protobuf.ByteString
          getFlightNumberBytes() {
        java.lang.Object ref = flightNumber_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          flightNumber_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * RENAME
       * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
       * </pre>
       *
       * <code>string flight_number = 2;</code>
       * @param value The flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        flightNumber_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RENAME
       * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
       * </pre>
       *
       * <code>string flight_number = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFlightNumber() {
        
        flightNumber_ = getDefaultInstance().getFlightNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * RENAME
       * string callsign = 2; // Callsign of the vehicle (8 chars). Can be null if no callsign has been received.
       * </pre>
       *
       * <code>string flight_number = 2;</code>
       * @param value The bytes for flightNumber to set.
       * @return This builder for chaining.
       */
      public Builder setFlightNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        flightNumber_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object originCountry_ = "";
      /**
       * <pre>
       * Country name inferred from the ICAO 24-bit address.
       * </pre>
       *
       * <code>string origin_country = 3;</code>
       * @return The originCountry.
       */
      public java.lang.String getOriginCountry() {
        java.lang.Object ref = originCountry_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          originCountry_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Country name inferred from the ICAO 24-bit address.
       * </pre>
       *
       * <code>string origin_country = 3;</code>
       * @return The bytes for originCountry.
       */
      public com.google.protobuf.ByteString
          getOriginCountryBytes() {
        java.lang.Object ref = originCountry_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originCountry_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Country name inferred from the ICAO 24-bit address.
       * </pre>
       *
       * <code>string origin_country = 3;</code>
       * @param value The originCountry to set.
       * @return This builder for chaining.
       */
      public Builder setOriginCountry(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        originCountry_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Country name inferred from the ICAO 24-bit address.
       * </pre>
       *
       * <code>string origin_country = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearOriginCountry() {
        
        originCountry_ = getDefaultInstance().getOriginCountry();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Country name inferred from the ICAO 24-bit address.
       * </pre>
       *
       * <code>string origin_country = 3;</code>
       * @param value The bytes for originCountry to set.
       * @return This builder for chaining.
       */
      public Builder setOriginCountryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        originCountry_ = value;
        onChanged();
        return this;
      }

      private double timePosition_ ;
      /**
       * <pre>
       * Unix timestamp (seconds) for the last position update. Can be null if no position report was received by OpenSky within the past 15s.
       * </pre>
       *
       * <code>double time_position = 4;</code>
       * @return The timePosition.
       */
      public double getTimePosition() {
        return timePosition_;
      }
      /**
       * <pre>
       * Unix timestamp (seconds) for the last position update. Can be null if no position report was received by OpenSky within the past 15s.
       * </pre>
       *
       * <code>double time_position = 4;</code>
       * @param value The timePosition to set.
       * @return This builder for chaining.
       */
      public Builder setTimePosition(double value) {
        
        timePosition_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unix timestamp (seconds) for the last position update. Can be null if no position report was received by OpenSky within the past 15s.
       * </pre>
       *
       * <code>double time_position = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearTimePosition() {
        
        timePosition_ = 0D;
        onChanged();
        return this;
      }

      private int lastContact_ ;
      /**
       * <pre>
       * Unix timestamp (seconds) for the last update in general. This field is updated for any new, valid message received from the transponder.
       * </pre>
       *
       * <code>int32 last_contact = 5;</code>
       * @return The lastContact.
       */
      public int getLastContact() {
        return lastContact_;
      }
      /**
       * <pre>
       * Unix timestamp (seconds) for the last update in general. This field is updated for any new, valid message received from the transponder.
       * </pre>
       *
       * <code>int32 last_contact = 5;</code>
       * @param value The lastContact to set.
       * @return This builder for chaining.
       */
      public Builder setLastContact(int value) {
        
        lastContact_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Unix timestamp (seconds) for the last update in general. This field is updated for any new, valid message received from the transponder.
       * </pre>
       *
       * <code>int32 last_contact = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearLastContact() {
        
        lastContact_ = 0;
        onChanged();
        return this;
      }

      private double longitude_ ;
      /**
       * <pre>
       * WGS-84 longitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double longitude = 6;</code>
       * @return The longitude.
       */
      public double getLongitude() {
        return longitude_;
      }
      /**
       * <pre>
       * WGS-84 longitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double longitude = 6;</code>
       * @param value The longitude to set.
       * @return This builder for chaining.
       */
      public Builder setLongitude(double value) {
        
        longitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * WGS-84 longitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double longitude = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearLongitude() {
        
        longitude_ = 0D;
        onChanged();
        return this;
      }

      private double latitude_ ;
      /**
       * <pre>
       * WGS-84 latitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double latitude = 7;</code>
       * @return The latitude.
       */
      public double getLatitude() {
        return latitude_;
      }
      /**
       * <pre>
       * WGS-84 latitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double latitude = 7;</code>
       * @param value The latitude to set.
       * @return This builder for chaining.
       */
      public Builder setLatitude(double value) {
        
        latitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * WGS-84 latitude in decimal degrees. Can be null.
       * </pre>
       *
       * <code>double latitude = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLatitude() {
        
        latitude_ = 0D;
        onChanged();
        return this;
      }

      private double baroAltitude_ ;
      /**
       * <pre>
       * Barometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double baro_altitude = 8;</code>
       * @return The baroAltitude.
       */
      public double getBaroAltitude() {
        return baroAltitude_;
      }
      /**
       * <pre>
       * Barometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double baro_altitude = 8;</code>
       * @param value The baroAltitude to set.
       * @return This builder for chaining.
       */
      public Builder setBaroAltitude(double value) {
        
        baroAltitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Barometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double baro_altitude = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearBaroAltitude() {
        
        baroAltitude_ = 0D;
        onChanged();
        return this;
      }

      private double velocity_ ;
      /**
       * <pre>
       * Velocity over ground in m/s. Can be null.
       * </pre>
       *
       * <code>double velocity = 9;</code>
       * @return The velocity.
       */
      public double getVelocity() {
        return velocity_;
      }
      /**
       * <pre>
       * Velocity over ground in m/s. Can be null.
       * </pre>
       *
       * <code>double velocity = 9;</code>
       * @param value The velocity to set.
       * @return This builder for chaining.
       */
      public Builder setVelocity(double value) {
        
        velocity_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Velocity over ground in m/s. Can be null.
       * </pre>
       *
       * <code>double velocity = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearVelocity() {
        
        velocity_ = 0D;
        onChanged();
        return this;
      }

      private double trueTrack_ ;
      /**
       * <pre>
       * True track in decimal degrees clockwise from north (north=0Â°). Can be null.
       * </pre>
       *
       * <code>double true_track = 10;</code>
       * @return The trueTrack.
       */
      public double getTrueTrack() {
        return trueTrack_;
      }
      /**
       * <pre>
       * True track in decimal degrees clockwise from north (north=0Â°). Can be null.
       * </pre>
       *
       * <code>double true_track = 10;</code>
       * @param value The trueTrack to set.
       * @return This builder for chaining.
       */
      public Builder setTrueTrack(double value) {
        
        trueTrack_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * True track in decimal degrees clockwise from north (north=0Â°). Can be null.
       * </pre>
       *
       * <code>double true_track = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTrueTrack() {
        
        trueTrack_ = 0D;
        onChanged();
        return this;
      }

      private double verticalRate_ ;
      /**
       * <pre>
       * Vertical rate in m/s. A positive value indicates that the airplane is climbing, a negative value indicates that it descends. Can be null.
       * </pre>
       *
       * <code>double vertical_rate = 11;</code>
       * @return The verticalRate.
       */
      public double getVerticalRate() {
        return verticalRate_;
      }
      /**
       * <pre>
       * Vertical rate in m/s. A positive value indicates that the airplane is climbing, a negative value indicates that it descends. Can be null.
       * </pre>
       *
       * <code>double vertical_rate = 11;</code>
       * @param value The verticalRate to set.
       * @return This builder for chaining.
       */
      public Builder setVerticalRate(double value) {
        
        verticalRate_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Vertical rate in m/s. A positive value indicates that the airplane is climbing, a negative value indicates that it descends. Can be null.
       * </pre>
       *
       * <code>double vertical_rate = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearVerticalRate() {
        
        verticalRate_ = 0D;
        onChanged();
        return this;
      }

      private double geoAltitude_ ;
      /**
       * <pre>
       * Geometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double geo_altitude = 12;</code>
       * @return The geoAltitude.
       */
      public double getGeoAltitude() {
        return geoAltitude_;
      }
      /**
       * <pre>
       * Geometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double geo_altitude = 12;</code>
       * @param value The geoAltitude to set.
       * @return This builder for chaining.
       */
      public Builder setGeoAltitude(double value) {
        
        geoAltitude_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Geometric altitude in meters. Can be null.
       * </pre>
       *
       * <code>double geo_altitude = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearGeoAltitude() {
        
        geoAltitude_ = 0D;
        onChanged();
        return this;
      }

      private java.lang.Object squawk_ = "";
      /**
       * <pre>
       * The transponder code aka Squawk. Can be null.
       * </pre>
       *
       * <code>string squawk = 13;</code>
       * @return The squawk.
       */
      public java.lang.String getSquawk() {
        java.lang.Object ref = squawk_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          squawk_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * The transponder code aka Squawk. Can be null.
       * </pre>
       *
       * <code>string squawk = 13;</code>
       * @return The bytes for squawk.
       */
      public com.google.protobuf.ByteString
          getSquawkBytes() {
        java.lang.Object ref = squawk_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          squawk_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * The transponder code aka Squawk. Can be null.
       * </pre>
       *
       * <code>string squawk = 13;</code>
       * @param value The squawk to set.
       * @return This builder for chaining.
       */
      public Builder setSquawk(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        squawk_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The transponder code aka Squawk. Can be null.
       * </pre>
       *
       * <code>string squawk = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearSquawk() {
        
        squawk_ = getDefaultInstance().getSquawk();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * The transponder code aka Squawk. Can be null.
       * </pre>
       *
       * <code>string squawk = 13;</code>
       * @param value The bytes for squawk to set.
       * @return This builder for chaining.
       */
      public Builder setSquawkBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        squawk_ = value;
        onChanged();
        return this;
      }

      private boolean spi_ ;
      /**
       * <pre>
       * Whether flight status indicates special purpose indicator.
       * </pre>
       *
       * <code>bool spi = 14;</code>
       * @return The spi.
       */
      public boolean getSpi() {
        return spi_;
      }
      /**
       * <pre>
       * Whether flight status indicates special purpose indicator.
       * </pre>
       *
       * <code>bool spi = 14;</code>
       * @param value The spi to set.
       * @return This builder for chaining.
       */
      public Builder setSpi(boolean value) {
        
        spi_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Whether flight status indicates special purpose indicator.
       * </pre>
       *
       * <code>bool spi = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearSpi() {
        
        spi_ = false;
        onChanged();
        return this;
      }

      private boolean onGround_ ;
      /**
       * <pre>
       * ADD
       * New field with tag number 15 for version 2
       * </pre>
       *
       * <code>bool on_ground = 15;</code>
       * @return The onGround.
       */
      public boolean getOnGround() {
        return onGround_;
      }
      /**
       * <pre>
       * ADD
       * New field with tag number 15 for version 2
       * </pre>
       *
       * <code>bool on_ground = 15;</code>
       * @param value The onGround to set.
       * @return This builder for chaining.
       */
      public Builder setOnGround(boolean value) {
        
        onGround_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * ADD
       * New field with tag number 15 for version 2
       * </pre>
       *
       * <code>bool on_ground = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearOnGround() {
        
        onGround_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:io.confluent.demo.flights.protobuf.pojo.FlightState)
    }

    // @@protoc_insertion_point(class_scope:io.confluent.demo.flights.protobuf.pojo.FlightState)
    private static final io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState();
    }

    public static io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<FlightState>
        PARSER = new com.google.protobuf.AbstractParser<FlightState>() {
      @java.lang.Override
      public FlightState parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FlightState(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FlightState> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FlightState> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public io.confluent.demo.aircraft.protobuf.pojo.FlightState2.FlightState getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024flight_state_2.proto\022\'io.confluent.dem" +
      "o.flights.protobuf.pojo\"\270\002\n\013FlightState\022" +
      "\016\n\006icao24\030\001 \001(\t\022\025\n\rflight_number\030\002 \001(\t\022\026" +
      "\n\016origin_country\030\003 \001(\t\022\025\n\rtime_position\030" +
      "\004 \001(\001\022\024\n\014last_contact\030\005 \001(\005\022\021\n\tlongitude" +
      "\030\006 \001(\001\022\020\n\010latitude\030\007 \001(\001\022\025\n\rbaro_altitud" +
      "e\030\010 \001(\001\022\020\n\010velocity\030\t \001(\001\022\022\n\ntrue_track\030" +
      "\n \001(\001\022\025\n\rvertical_rate\030\013 \001(\001\022\024\n\014geo_alti" +
      "tude\030\014 \001(\001\022\016\n\006squawk\030\r \001(\t\022\013\n\003spi\030\016 \001(\010\022" +
      "\021\n\ton_ground\030\017 \001(\010B\016B\014FlightState2b\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_io_confluent_demo_flights_protobuf_pojo_FlightState_descriptor,
        new java.lang.String[] { "Icao24", "FlightNumber", "OriginCountry", "TimePosition", "LastContact", "Longitude", "Latitude", "BaroAltitude", "Velocity", "TrueTrack", "VerticalRate", "GeoAltitude", "Squawk", "Spi", "OnGround", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
